<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Gazebo is unable to use the same <material> tags that are already in the URDF (that RViz uses). -->
    <!-- Instead, we need to add gazebo tags for our links that refer to Gazebo materials -->
    <gazebo reference="body">
      <material>Gazebo/White</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="wheel_L">
      <mu1 value="3.0"/>
      <mu2 value="4.0"/>
      <kp value="10000000.0"/>
      <kd value="1.0"/>
      <fdir1 value="1 0 0"/>
      <material>Gazebo/Grey</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="wheel_R">
      <mu1 value="1.0"/>
      <mu2 value="1.0"/>
      <kp value="10000000.0"/>
      <kd value="1.0"/>
      <fdir1 value="1 0 0"/>
      <material>Gazebo/Grey</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="caster">
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <!-- Gazebo Left Camara Sensor-->
    <gazebo reference="camera_L">
    <sensor type="camera" name="camera_L">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    </gazebo>
    <!-- Gazebo Right Camara Sensor-->
    <gazebo reference="camera_R">
    <sensor type="camera" name="camera_R">
      <update_rate>30.0</update_rate>
      <visualize>true</visualize>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    </gazebo>

    <!-- Gazebo P3D-->
    <gazebo>
    <plugin name="libgazebo_ros_p3d" filename="libgazebo_ros_p3d.so">
        <ros>
            <namespace>p3d</namespace>
            <remapping>odom_r:=odom</remapping>
            </ros>
            <frame_name>map</frame_name>
            <body_name>base_link</body_name>
            <update_rate>200.0</update_rate>
            <gaussian_noise>0.01</gaussian_noise>
    </plugin>
    </gazebo>

    <!-- Differential Drive Controller-->
    <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        
        <ros>
          <!-- Set namespace -->
          <namespace>/</namespace>

          <!-- Remap default topics -->
          <!--<argument>cmd_vel:=cmd_vel</argument>
          <argument>odom:=odom</argument>-->
        </ros>


        <!-- Plugin update rate in Hz -->
        <update_rate>10</update_rate>

        <!-- Name of left joint, defaults to `left_joint` -->
        <left_joint>joint_wheel_L</left_joint>

        <!-- Name of right joint, defaults to `right_joint` -->
        <right_joint>joint_wheel_R</right_joint>

        <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
        <wheel_separation>0.142</wheel_separation>

        <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
        <wheel_diameter>0.045</wheel_diameter>

        <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
        <wheelAcceleration>0.8</wheelAcceleration>

        <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
        <wheelTorque>10</wheelTorque>

      
        <!-- Odometry frame, defaults to `odom` -->
        <odometry_frame>odom</odometry_frame>

        <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
        <robotBaseFrame>base_footprint</robotBaseFrame>

        <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
        <odometrySource>1</odometrySource>

        <!-- Set to true to publish transforms for the wheel links, defaults to false -->
        <publishWheelTF>true</publishWheelTF>
        
        <publishOdom>true</publishOdom>

        <!-- Set to true to publish transforms for the odometry, defaults to true -->
        <publish_odom>true</publish_odom>

        <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
        <publishWheelJointState>true</publishWheelJointState>

        <!-- Set to true to swap right and left wheels, defaults to true -->
        <legacyMode>false</legacyMode>
        
        
        <max_wheel_torque>200</max_wheel_torque>
        <max_acceleration>3.0</max_acceleration>
      
      
      </plugin>
    </gazebo>

    <!-- Joint Publisher-->
    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher"
            filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>20</update_rate>
            <joint_name> </joint_name>
            <joint_name>joint_wheel_L</joint_name>
            <joint_name>joint_wheel_R</joint_name>
            <joint_name>joint_rotational_2d_lidar</joint_name>
            <joint_name>joint_rotational_3d_lidar</joint_name>
        </plugin>
    </gazebo>

    <gazebo>
    <plugin name="gazebo_ros_control" filename= "libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
    </gazebo>

</robot>