<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="3D_Dar">
    <xacro:property name="base_radius_3D" value="0.005"/>
    <xacro:property name="base_height_3D" value="0.005"/>
    <xacro:property name="laz_3D_radius" value="0.004"/>
    <xacro:property name="laz_3D_height" value="0.01"/>
    <xacro:property name="mass" value="0.001"/>

    <gazebo reference="laz_3D_base">
        <material>Gazebo/Grey</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
    </gazebo>

    <link name="laz_3D_base">
        <visual>
            <geometry>
                <cylinder length="${base_height_3D}" radius="${base_radius_3D}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder length="${base_height_3D}" radius="${base_radius_3D}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${mass}"/>
            <inertia ixx="${(1/12) * mass * (3 * base_radius_3D * base_radius_3D + base_height_3D * base_height_3D)}" ixy="0" ixz="0" iyy="${(1/12) * mass * (3 * base_radius_3D * base_radius_3D + base_height_3D * base_height_3D)}" iyz="0" izz="${(1/2) * mass * base_radius_3D * base_radius_3D}"/>
        </inertial>
    </link>

    <link name="laz_3D_rot">
        <visual>
            <geometry>
              <cylinder length="${laz_3D_height}" radius="${laz_3D_radius}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
              <cylinder length="${laz_3D_height}" radius="${laz_3D_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${mass}"/>
            <inertia ixx="${(1/12) * mass * (3 * laz_3D_radius * laz_3D_radius + laz_3D_height * laz_3D_height)}" ixy="0" ixz="0" iyy="${(1/12) * mass * (3 * laz_3D_radius * laz_3D_radius + laz_3D_height * laz_3D_height)}" iyz="0" izz="${(1/2) * mass * laz_3D_radius * laz_3D_radius}"/>
        </inertial>
    </link>

    <joint name="joint_rotational_3d_lidar" type="continuous">
        <parent link="laz_3D_base"/>
        <child link="laz_3D_rot"/>
        <axis xyz="0 0 1"/>
        <origin xyz = "0 0 ${base_height_3D/2}" rpy="0.0 0.0 0.0"/>
        <dynamics friction="0.1"/>
    </joint>
    <joint name="joint_3d_lidar" type="fixed">
      <parent link="body"/>
      <child link="laz_3D_base"/>
      <origin xyz="0.25 0.075 0.12" rpy="0.0 0.0 0.0"/>
    </joint>

    <gazebo reference="laz_3D_rot">
        <material>Gazebo/RedGlow</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>

        <sensor type="ray" name="laz_3D">
            <pose>${laz_3D_radius} 0 ${laz_3D_height/4} 0 0 0</pose>
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>30</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>100</samples>
                        <resolution>2</resolution>
                        <min_angle>-${pi/8}</min_angle>
                        <max_angle>${pi/8}</max_angle>
                    </horizontal>
                    <vertical>
                        <samples>100</samples>
                        <resolution>2</resolution>
                        <min_angle>-${pi/9}</min_angle>
                        <max_angle>${pi/9}</max_angle>
                    </vertical>
                </scan>
                <range>
                    <min>0.05</min>
                    <max>15</max>
                    <resolution>0.02</resolution>
              </range>
            </ray>

          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
            <topicName>/pcl</topicName>
            <frameName>laz_3D_rot</frameName>
            <organize_cloud>true</organize_cloud>
            <min_range>0.05</min_range>
            <max_range>13</max_range>
            <!-- <gaussianNoise>${noise}</gaussianNoise> -->
          </plugin>
            <!-- <plugin name="scan" filename="libgazebo_ros_laser.so">
                <output_type>sensor_msgs/LaserScan</output_type>
                <frameName>laz_3D_rot</frameName>
                <ros>
                    <remapping>~/out:=scan_3D</remapping>
                </ros>
            </plugin> -->

        </sensor>
        
    </gazebo>
</robot>